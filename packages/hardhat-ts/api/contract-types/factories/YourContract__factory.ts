/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { YourContract, YourContractInterface } from "../YourContract";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "purpose",
        type: "string",
      },
    ],
    name: "SetPurpose",
    type: "event",
  },
  {
    inputs: [],
    name: "purpose",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newPurpose",
        type: "string",
      },
    ],
    name: "setPurpose",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c0604052601c60808190527f4275696c64696e6720556e73746f707061626c6520417070732121210000000060a090815261003e9160009190610051565b5034801561004b57600080fd5b50610124565b82805461005d906100ea565b90600052602060002090601f01602090048101928261007f57600085556100c5565b82601f1061009857805160ff19168380011785556100c5565b828001600101855582156100c5579182015b828111156100c55782518255916020019190600101906100aa565b506100d19291506100d5565b5090565b5b808211156100d157600081556001016100d6565b600181811c908216806100fe57607f821691505b60208210810361011e57634e487b7160e01b600052602260045260246000fd5b50919050565b610438806101336000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806370740aab1461003b578063eb68757f14610059575b600080fd5b61004361006e565b60405161005091906101e6565b60405180910390f35b61006c610067366004610251565b6100fc565b005b6000805461007b90610302565b80601f01602080910402602001604051908101604052809291908181526020018280546100a790610302565b80156100f45780601f106100c9576101008083540402835291602001916100f4565b820191906000526020600020905b8154815290600101906020018083116100d757829003601f168201915b505050505081565b805161010f90600090602084019061014d565b507f6ea5d6383a120235c7728a9a6751672a8ac068e4ed34dcca2ee444182c1812de33600060405161014292919061033c565b60405180910390a150565b82805461015990610302565b90600052602060002090601f01602090048101928261017b57600085556101c1565b82601f1061019457805160ff19168380011785556101c1565b828001600101855582156101c1579182015b828111156101c15782518255916020019190600101906101a6565b506101cd9291506101d1565b5090565b5b808211156101cd57600081556001016101d2565b600060208083528351808285015260005b81811015610213578581018301518582016040015282016101f7565b81811115610225576000604083870101525b50601f01601f1916929092016040019392505050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561026357600080fd5b813567ffffffffffffffff8082111561027b57600080fd5b818401915084601f83011261028f57600080fd5b8135818111156102a1576102a161023b565b604051601f8201601f19908116603f011681019083821181831017156102c9576102c961023b565b816040528281528760208487010111156102e257600080fd5b826020860160208301376000928101602001929092525095945050505050565b600181811c9082168061031657607f821691505b60208210810361033657634e487b7160e01b600052602260045260246000fd5b50919050565b73ffffffffffffffffffffffffffffffffffffffff83168152600060206040818401526000845481600182811c91508083168061037a57607f831692505b858310810361039757634e487b7160e01b85526022600452602485fd5b60408801839052606088018180156103b657600181146103c7576103f2565b60ff198616825287820196506103f2565b60008b81526020902060005b868110156103ec578154848201529085019089016103d3565b83019750505b50949a995050505050505050505056fea26469706673582212204e2b7194d0b1cbdd3ed313870c3477e1130e77ccd19ecf9fa53453ddc82886b664736f6c634300080e0033";

type YourContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: YourContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class YourContract__factory extends ContractFactory {
  constructor(...args: YourContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "YourContract";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<YourContract> {
    return super.deploy(overrides || {}) as Promise<YourContract>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): YourContract {
    return super.attach(address) as YourContract;
  }
  connect(signer: Signer): YourContract__factory {
    return super.connect(signer) as YourContract__factory;
  }
  static readonly contractName: "YourContract";
  public readonly contractName: "YourContract";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YourContractInterface {
    return new utils.Interface(_abi) as YourContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): YourContract {
    return new Contract(address, _abi, signerOrProvider) as YourContract;
  }
}
