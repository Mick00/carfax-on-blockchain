/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Contributors, ContributorsInterface } from "../Contributors";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contributor",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ConfirmedRegistration",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "contributorHash",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "contributor",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "registrar",
        type: "address",
      },
    ],
    name: "Registered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "registrator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "RemovedRegistrator",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_registrar",
        type: "address",
      },
    ],
    name: "addRegistrar",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_registrarAddress",
        type: "address",
      },
    ],
    name: "confirmRegistration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrar",
        type: "address",
      },
      {
        internalType: "address",
        name: "contributor",
        type: "address",
      },
    ],
    name: "getConfirmationHash",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokenIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_contributorHash",
        type: "string",
      },
      {
        internalType: "address",
        name: "_contributor",
        type: "address",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registrars",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "removeContributor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_registrar",
        type: "address",
      },
    ],
    name: "removeRegistrar",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604080518082018252601181527021b0b92330bc21b7b73a3934b13aba37b960791b60208083019182528351808501909452600384526243464360e81b9084015281519192916200006691600091620000f5565b5080516200007c906001906020840190620000f5565b50505062000099620000936200009f60201b60201c565b620000a3565b620001d7565b3390565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b82805462000103906200019b565b90600052602060002090601f01602090048101928262000127576000855562000172565b82601f106200014257805160ff191683800117855562000172565b8280016001018555821562000172579182015b828111156200017257825182559160200191906001019062000155565b506200018092915062000184565b5090565b5b8082111562000180576000815560010162000185565b600181811c90821680620001b057607f821691505b602082108103620001d157634e487b7160e01b600052602260045260246000fd5b50919050565b611f6e80620001e76000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c806374756091116100c3578063af92a6931161007c578063af92a693146102df578063b88d4fde146102f2578063ba904eed14610305578063c87b56dd14610318578063e985e9c51461032b578063f2fde38b1461036757600080fd5b8063747560911461026a57806389aeca761461027d5780638da5cb5b146102a057806395d89b41146102b1578063a22cb465146102b9578063a24e76a1146102cc57600080fd5b806323b872dd1161011557806323b872dd1461020e57806342842e0e146102215780636352211e1461023457806367f718a91461024757806370a082311461024f578063715018a61461026257600080fd5b806301ffc9a71461015d57806306fdde0314610185578063081812fc1461019a578063095ea7b3146101c55780631d3efcf3146101da5780631e59c529146101fb575b600080fd5b61017061016b3660046119de565b61037a565b60405190151581526020015b60405180910390f35b61018d6103cc565b60405161017c9190611a53565b6101ad6101a8366004611a66565b61045e565b6040516001600160a01b03909116815260200161017c565b6101d86101d3366004611a9b565b6104f8565b005b6101ed6101e8366004611ac5565b61060d565b60405190815260200161017c565b6101d8610209366004611b6c565b610864565b6101d861021c366004611bce565b610945565b6101d861022f366004611bce565b610976565b6101ad610242366004611a66565b610991565b600b546101ed565b6101ed61025d366004611ac5565b610a08565b6101d8610a8f565b6101d8610278366004611a66565b610ac5565b61017061028b366004611ac5565b600a6020526000908152604090205460ff1681565b6007546001600160a01b03166101ad565b61018d610b3f565b6101d86102c7366004611c0a565b610b4e565b61018d6102da366004611c46565b610b5d565b6101d86102ed366004611ac5565b610c17565b6101d8610300366004611c70565b610c65565b6101d8610313366004611ac5565b610c9d565b61018d610326366004611a66565b610ce8565b610170610339366004611c46565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6101d8610375366004611ac5565b610e6e565b60006001600160e01b031982166380ac58cd60e01b14806103ab57506001600160e01b03198216635b5e139f60e01b145b806103c657506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546103db90611cec565b80601f016020809104026020016040519081016040528092919081815260200182805461040790611cec565b80156104545780601f1061042957610100808354040283529160200191610454565b820191906000526020600020905b81548152906001019060200180831161043757829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166104dc5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061050382610991565b9050806001600160a01b0316836001600160a01b0316036105705760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016104d3565b336001600160a01b038216148061058c575061058c8133610339565b6105fe5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016104d3565b6106088383610f09565b505050565b6001600160a01b0381166000908152600860209081526040808320338085529252822080546106c490829061064190611cec565b80601f016020809104026020016040519081016040528092919081815260200182805461066d90611cec565b80156106ba5780601f1061068f576101008083540402835291602001916106ba565b820191906000526020600020905b81548152906001019060200180831161069d57829003601f168201915b5050505050511590565b156107115760405162461bcd60e51b815260206004820152601c60248201527f436f6e6669726d6174696f6e20646f6573206e6f742065786973742e0000000060448201526064016104d3565b600b805490600061072183611d3c565b9091555050600b8054600090815260096020526040902080546001600160a01b0319166001600160a01b0385161790555461075d908390610f77565b6107f2600b5482805461076f90611cec565b80601f016020809104026020016040519081016040528092919081815260200182805461079b90611cec565b80156107e85780601f106107bd576101008083540402835291602001916107e8565b820191906000526020600020905b8154815290600101906020018083116107cb57829003601f168201915b50505050506110b9565b6001600160a01b0380851660009081526008602090815260408083209386168352929052908120610822916118f5565b600b546040516001600160a01b038416907f68607f5d1cfdf9a25cbd17b6fc959cebe6a8ac737631ade37fa23a6b1ffd031390600090a35050600b5492915050565b336000908152600a602052604090205460ff166108c35760405162461bcd60e51b815260206004820152601960248201527f43616c6c6572206973206e6f742061207265676973747261720000000000000060448201526064016104d3565b3360008181526008602090815260408083206001600160a01b0386168452825290912084516108f49286019061192f565b50806001600160a01b0316826001600160a01b03167f89e10b169d87e3f3c9c0cf7d190f5777367907b57ce823d5422007ca31f71986856040516109389190611a53565b60405180910390a3505050565b61094f3382611153565b61096b5760405162461bcd60e51b81526004016104d390611d55565b610608838383611249565b61060883838360405180602001604052806000815250610c65565b6000818152600260205260408120546001600160a01b0316806103c65760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016104d3565b60006001600160a01b038216610a735760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016104d3565b506001600160a01b031660009081526003602052604090205490565b6007546001600160a01b03163314610ab95760405162461bcd60e51b81526004016104d390611da6565b610ac360006113e5565b565b6007546001600160a01b03163314610aef5760405162461bcd60e51b81526004016104d390611da6565b6000610afa82610991565b9050610b0582611437565b60405182906001600160a01b038316907fb3ac4731a2296f6e1838023a8293ebe3f9ddf2c43a4e6afd1d011d5bd6ddebac90600090a35050565b6060600180546103db90611cec565b610b59338383611477565b5050565b6001600160a01b038083166000908152600860209081526040808320938516835292905220805460609190610b9190611cec565b80601f0160208091040260200160405190810160405280929190818152602001828054610bbd90611cec565b8015610c0a5780601f10610bdf57610100808354040283529160200191610c0a565b820191906000526020600020905b815481529060010190602001808311610bed57829003601f168201915b5050505050905092915050565b6007546001600160a01b03163314610c415760405162461bcd60e51b81526004016104d390611da6565b6001600160a01b03166000908152600a60205260409020805460ff19166001179055565b610c6f3383611153565b610c8b5760405162461bcd60e51b81526004016104d390611d55565b610c978484848461153d565b50505050565b6007546001600160a01b03163314610cc75760405162461bcd60e51b81526004016104d390611da6565b6001600160a01b03166000908152600a60205260409020805460ff19169055565b6000818152600260205260409020546060906001600160a01b0316610d695760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f72206044820152703737b732bc34b9ba32b73a103a37b5b2b760791b60648201526084016104d3565b60008281526006602052604081208054610d8290611cec565b80601f0160208091040260200160405190810160405280929190818152602001828054610dae90611cec565b8015610dfb5780601f10610dd057610100808354040283529160200191610dfb565b820191906000526020600020905b815481529060010190602001808311610dde57829003601f168201915b505050505090506000610e1960408051602081019091526000815290565b90508051600003610e2b575092915050565b815115610e5d578082604051602001610e45929190611ddb565b60405160208183030381529060405292505050919050565b610e6684611570565b949350505050565b6007546001600160a01b03163314610e985760405162461bcd60e51b81526004016104d390611da6565b6001600160a01b038116610efd5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104d3565b610f06816113e5565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610f3e82610991565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6001600160a01b038216610fcd5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016104d3565b6000818152600260205260409020546001600160a01b0316156110325760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016104d3565b6001600160a01b038216600090815260036020526040812080546001929061105b908490611e0a565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000828152600260205260409020546001600160a01b03166111345760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b60648201526084016104d3565b600082815260066020908152604090912082516106089284019061192f565b6000818152600260205260408120546001600160a01b03166111cc5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016104d3565b60006111d783610991565b9050806001600160a01b0316846001600160a01b0316148061121e57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610e665750836001600160a01b03166112378461045e565b6001600160a01b031614949350505050565b826001600160a01b031661125c82610991565b6001600160a01b0316146112c05760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016104d3565b6001600160a01b0382166113225760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016104d3565b61132d600082610f09565b6001600160a01b0383166000908152600360205260408120805460019290611356908490611e22565b90915550506001600160a01b0382166000908152600360205260408120805460019290611384908490611e0a565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b61144081611658565b6000818152600660205260409020805461145990611cec565b159050610f06576000818152600660205260408120610f06916118f5565b816001600160a01b0316836001600160a01b0316036114d85760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016104d3565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319101610938565b611548848484611249565b611554848484846116f3565b610c975760405162461bcd60e51b81526004016104d390611e39565b6000818152600260205260409020546060906001600160a01b03166115ef5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016104d3565b600061160660408051602081019091526000815290565b905060008151116116265760405180602001604052806000815250611651565b80611630846117f4565b604051602001611641929190611ddb565b6040516020818303038152906040525b9392505050565b600061166382610991565b9050611670600083610f09565b6001600160a01b0381166000908152600360205260408120805460019290611699908490611e22565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60006001600160a01b0384163b156117e957604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611737903390899088908890600401611e8b565b6020604051808303816000875af1925050508015611772575060408051601f3d908101601f1916820190925261176f91810190611ec7565b60015b6117cf573d8080156117a0576040519150601f19603f3d011682016040523d82523d6000602084013e6117a5565b606091505b5080516000036117c75760405162461bcd60e51b81526004016104d390611e39565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610e66565b506001949350505050565b60608160000361181b5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611845578061182f81611d3c565b915061183e9050600a83611efa565b915061181f565b60008167ffffffffffffffff81111561186057611860611ae0565b6040519080825280601f01601f19166020018201604052801561188a576020820181803683370190505b5090505b8415610e665761189f600183611e22565b91506118ac600a86611f0e565b6118b7906030611e0a565b60f81b8183815181106118cc576118cc611f22565b60200101906001600160f81b031916908160001a9053506118ee600a86611efa565b945061188e565b50805461190190611cec565b6000825580601f10611911575050565b601f016020900490600052602060002090810190610f0691906119b3565b82805461193b90611cec565b90600052602060002090601f01602090048101928261195d57600085556119a3565b82601f1061197657805160ff19168380011785556119a3565b828001600101855582156119a3579182015b828111156119a3578251825591602001919060010190611988565b506119af9291506119b3565b5090565b5b808211156119af57600081556001016119b4565b6001600160e01b031981168114610f0657600080fd5b6000602082840312156119f057600080fd5b8135611651816119c8565b60005b83811015611a165781810151838201526020016119fe565b83811115610c975750506000910152565b60008151808452611a3f8160208601602086016119fb565b601f01601f19169290920160200192915050565b6020815260006116516020830184611a27565b600060208284031215611a7857600080fd5b5035919050565b80356001600160a01b0381168114611a9657600080fd5b919050565b60008060408385031215611aae57600080fd5b611ab783611a7f565b946020939093013593505050565b600060208284031215611ad757600080fd5b61165182611a7f565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611b1157611b11611ae0565b604051601f8501601f19908116603f01168101908282118183101715611b3957611b39611ae0565b81604052809350858152868686011115611b5257600080fd5b858560208301376000602087830101525050509392505050565b60008060408385031215611b7f57600080fd5b823567ffffffffffffffff811115611b9657600080fd5b8301601f81018513611ba757600080fd5b611bb685823560208401611af6565b925050611bc560208401611a7f565b90509250929050565b600080600060608486031215611be357600080fd5b611bec84611a7f565b9250611bfa60208501611a7f565b9150604084013590509250925092565b60008060408385031215611c1d57600080fd5b611c2683611a7f565b915060208301358015158114611c3b57600080fd5b809150509250929050565b60008060408385031215611c5957600080fd5b611c6283611a7f565b9150611bc560208401611a7f565b60008060008060808587031215611c8657600080fd5b611c8f85611a7f565b9350611c9d60208601611a7f565b925060408501359150606085013567ffffffffffffffff811115611cc057600080fd5b8501601f81018713611cd157600080fd5b611ce087823560208401611af6565b91505092959194509250565b600181811c90821680611d0057607f821691505b602082108103611d2057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600060018201611d4e57611d4e611d26565b5060010190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008351611ded8184602088016119fb565b835190830190611e018183602088016119fb565b01949350505050565b60008219821115611e1d57611e1d611d26565b500190565b600082821015611e3457611e34611d26565b500390565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60006001600160a01b03808716835280861660208401525083604083015260806060830152611ebd6080830184611a27565b9695505050505050565b600060208284031215611ed957600080fd5b8151611651816119c8565b634e487b7160e01b600052601260045260246000fd5b600082611f0957611f09611ee4565b500490565b600082611f1d57611f1d611ee4565b500690565b634e487b7160e01b600052603260045260246000fdfea26469706673582212207e5dd79eda060d9d9581a6e9afada8b3338da726cc7955a185cb5bc1593bf88864736f6c634300080e0033";

type ContributorsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ContributorsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Contributors__factory extends ContractFactory {
  constructor(...args: ContributorsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Contributors";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Contributors> {
    return super.deploy(overrides || {}) as Promise<Contributors>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Contributors {
    return super.attach(address) as Contributors;
  }
  connect(signer: Signer): Contributors__factory {
    return super.connect(signer) as Contributors__factory;
  }
  static readonly contractName: "Contributors";
  public readonly contractName: "Contributors";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ContributorsInterface {
    return new utils.Interface(_abi) as ContributorsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Contributors {
    return new Contract(address, _abi, signerOrProvider) as Contributors;
  }
}
